name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros-distro: [humble, iron]
        compiler: [gcc]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup ROS2 ${{ matrix.ros-distro }}
      run: |
        # Add ROS2 repository
        sudo apt update && sudo apt install software-properties-common
        sudo add-apt-repository universe
        sudo apt update && sudo apt install curl
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        
        # Install ROS2
        sudo apt update
        sudo apt install -y ros-${{ matrix.ros-distro }}-desktop
        
        # Source ROS2
        echo "source /opt/ros/${{ matrix.ros-distro }}/setup.bash" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          pkg-config \
          python3-colcon-common-extensions

    - name: Install Quill library
      run: |
        # Clone and build Quill from source
        git clone https://github.com/odygrd/quill.git
        cd quill
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    - name: Build package
      run: |
        source /opt/ros/${{ matrix.ros-distro }}/setup.bash
        colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        ros-distro: [humble]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup ROS2 ${{ matrix.ros-distro }}
      run: |
        # Add ROS2 repository
        sudo apt update && sudo apt install software-properties-common
        sudo add-apt-repository universe
        sudo apt update && sudo apt install curl
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        
        # Install ROS2
        sudo apt update
        sudo apt install -y ros-${{ matrix.ros-distro }}-desktop
        
        # Source ROS2
        echo "source /opt/ros/${{ matrix.ros-distro }}/setup.bash" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          pkg-config \
          python3-colcon-common-extensions

    - name: Install Quill library
      run: |
        # Clone and build Quill from source
        git clone https://github.com/odygrd/quill.git
        cd quill
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    - name: Build and test
      run: |
        source /opt/ros/${{ matrix.ros-distro }}/setup.bash
        colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release
        . install/setup.bash
        colcon test --event-handlers console_direct+

    - name: Check test results
      run: |
        source /opt/ros/${{ matrix.ros-distro }}/setup.bash
        . install/setup.bash
        colcon test-result --all 